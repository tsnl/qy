--- sub m0 ---

x = 42;

--- sub m1 [T, U, n] ---

A = T;
E = U;
// B = I64;
// C = F32;
// D = F64;

hello = 42 * n;

--- sub m3 ---

f_negate = (x) -> TOT {w = -x; w};
f_negate ~ (F32) -> F32;

--- sub entry_point_for_v1_default_loader ---

v1 = 1 + 1;
v2 = m1[F64, U32, +3]:hello;
v3 = m1[F64, U32, -3]:hello;

T1 = U32;
T2 = m1[F64, U32, 0]:A;
T3 = m1[F64, U32, 0]:E;
k = m3:f_negate;
main = () -> ML {0};
main ~ () -> ML I32;

third = k(45f);
fourth = third + 45f;
// fifth = main!();

main_for_v1_default_loader = main;
